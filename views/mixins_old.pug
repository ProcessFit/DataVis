
mixin attribution(title)
    p by #{title}

mixin sample(title)
    p This is a sample mixin called <strong>#{title}</strong>


mixin bootswatch(theme)
  link(href="//maxcdn.bootstrapcdn.com/bootswatch/4.1.3/" + theme + "/bootstrap.min.css", rel="stylesheet")

//- Navbar mixins
mixin nav(projname, id, style)
  - var style = (typeof style === 'undefined') ? "navbar-default" : style
  nav(class=["navbar", style], role="navigation")
      .container-fluid#navfluid
          .navbar-header
              button.navbar-toggle.collapsed(type='button', data-toggle='collapse', data-target='#navigationbar')
                  span.sr-only Toggle navigation
                  span.icon-bar
                  span.icon-bar
                  span.icon-bar
              a.navbar-brand(href='/') #{projname}
          .collapse.navbar-collapse( id=id )
              ul.navbar-nav
                  block

mixin nav_item(href, idName, active)
  li(class=active, id=idName): a(class='nav-link', href=href )
      block

mixin nav_item_dropdown(href, active)
  li.dropdown(class='nav-item')
      a.dropdown-toggle(class='nav-link', href=href, data-toggle='dropdown', role='button', aria-expanded='false')= attributes.label
          span.caret
      ul.dropdown-menu(role='menu')
          block

mixin nav_dropdown_item(href, active)
    a.dropdown-item(href=href)
          block




mixin nav_item_dropdowna(href, active)
  li(class=["dropdown", active])
      a.dropdown-toggle( href=href, data-toggle="dropdown", role="button", aria-expanded="false" )=attributes.label
      span.caret
      ul.dropdown-menu( role="menu" )
          block

mixin nav_divider
  li.divider

mixin nav_header
  li.dropdown-header
      block
//- End navbar mixins

//- Panel mixin
mixin panel(heading, style)
  - var style = (typeof style === 'undefined') ? "default" : style
  div( class=["panel", "panel-" + style] )
      .panel-heading= heading
      .panel-body
          block

//- Button mixin
mixin button(style, href, size)
  - var style = (typeof style === 'undefined') ? "default" : style
  - var href = (typeof href === 'undefined') ? "#" : href
  case size
      when "large"
          - size = "btn-lg"
      when "small"
          - size = "btn-sm"
      when "mini"
          - size = "btn-xs"
  a( class=["btn", "btn-" + style, size], href=href )
      block

//- List group mixins

mixin listGroup(type, id)
  - var groupType
  - groupType = type
  case groupType
      when 'list'
          ul.list-group(id=id)
              block
      default
          .list-group(id=id)
              block

mixin listItem(arg1, arg2)
  case groupType
      when 'list'
          li( class=["list-group-item", arg1] )
              block
      when 'links'
          a( href=arg1, class=["list-group-item", arg2] )
              block
      default
          .list-group-item( class=["list-group-item", arg1] )
              block

mixin listHeading
  h4.list-group-item-heading
      block

mixin listText
  .list-group-item-text
      block

mixin icon(name)
  span.glyphicon(class=`glyphicon-${name}`,aria-hidden="true")

mixin icon-primary(name)
  span.glyphicon.text-primary(class=`glyphicon-${name}`,aria-hidden="true")

//- Icon button
mixin icon-btn(icon, arg1, arg2)
  button.btn.btn-small(type="button",aria-label=icon, class=arg2)
    +icon(icon)
    ='  '+arg1
